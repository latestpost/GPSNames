/*
 * File: app/controller/MainController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MainController', {
    extend: 'Ext.app.Controller',

    config: {
        routes: {
            'place/:params': 'urlPlace'
        },

        control: {
            "#login_button": {
                tap: 'onLogin_buttonTap'
            },
            "#myLocationsList": {
                tap: 'onMyLocationsListTap'
            },
            "button#nokiaBtn": {
                tap: 'onNokiaBtnTap'
            },
            "#googleBtn": {
                tap: 'onGoogleBtnTap'
            },
            "#layarBtn": {
                tap: 'onLayarBtnTap'
            },
            "#wazeBtn": {
                tap: 'onWazeBtnTap'
            },
            "#myLocationsContainer": {
                itemtap: 'onMyLocationsContainerItemTap'
            },
            "#iconImg": {
                tap: 'onIconImgTap'
            },
            "#iconChooser": {
                itemtap: 'onIconChooserItemTap'
            },
            "#placeAddBtn": {
                tap: 'onPlaceAddBtnTap'
            },
            "#placeDeleteBtn": {
                tap: 'onPlaceDeleteBtnTap'
            },
            "#placeClearBtn": {
                tap: 'onPlaceClearBtnTap'
            },
            "#placeSendBtn": {
                tap: 'onPlaceSendBtnTap'
            },
            "#placeContainer": {
                activeitemchange: 'onPlaceContainerActiveItemChange'
            },
            "#exitChooseIconBtn": {
                tap: 'onExitChooseIconBtnTap'
            }
        }
    },

    onLogin_buttonTap: function(button, e, eOpts) {
        var username=Ext.getCmp('username').getValue();
        var password=Ext.getCmp('password').getValue();

        var settingsStore = Ext.getStore('Settings');
        settingsStore.removeAll();

        var form = Ext.getCmp('account').getValues();

        settingsStore.add({username: username,password:password});
        settingsStore.sync(); 
        Ext.Msg.alert('Settings Updated!','');

        // Make the JsonP request
        Ext.util.JSONP.request({
            url: 'http://www.gpsname.com/index.php/login/api_login',
            callbackKey: 'callback',
            params: {email: username, password : password},
            success: function(response, request) {
                // Unmask the viewport
                Ext.Viewport.unmask();
                if (response.result !='OK')
                {
                    Ext.Msg.alert('Login Error', response.message, '');
                } 
                else 
                {

                    Ext.Msg.alert('Login OK','id='+response.message);
                    var locationsStore = Ext.getStore('MyLocations');
                    locationsStore.load();
                }
            }
        });
    },

    onMyLocationsListTap: function(list) {

    },

    onNokiaBtnTap: function(button, e, eOpts) {
        var placeContainer=Ext.getCmp('placeContainer');
        var Record=placeContainer.getRecord();
        var nokiaurl='http://m.maps.nokia.com/#action=route&params=%7B%22mode%22%3A%22drive%22%2C%22ename%22%3A%22'+Record.data.title+'%22%2C%22elat%22%3A%22'+Record.data.lat+'%22%2C%22elng%22%3A%22'+Record.data.lon+'%22%7D&bmk=1';               
        window.open(nokiaurl);

    },

    onGoogleBtnTap: function(button, e, eOpts) {
        var placeContainer=Ext.getCmp('placeContainer');
        var Record=placeContainer.getRecord();
        var googleurl='http://maps.google.com/maps?saddr='+currentLat+','+currentLon+'&daddr='+Record.data.lat+','+Record.data.lon;
        window.open(googleurl);
    },

    onLayarBtnTap: function(button, e, eOpts) {
        var placeContainer=Ext.getCmp('placeContainer');
        var Record=placeContainer.getRecord();
        var layarurl='layar://gpsname/?SEARCHBOX='+Record.data.id;
        window.open(layarurl);  
    },

    onWazeBtnTap: function(button, e, eOpts) {
        var placeContainer=Ext.getCmp('placeContainer');
        var Record=placeContainer.getRecord();

        var wazeurl='waze://?ll='+Record.data.lat+','+Record.data.lon;
        window.open(wazeurl);
    },

    onMyLocationsContainerItemTap: function(dataview, index, target, record, e, eOpts) {
        Ext.getCmp('mainPanel').setActiveItem(0);
        var placeContainer=Ext.getCmp('placeContainer');
        placeContainer.setRecord(record);

        Ext.getCmp('title').setValue(record.data.title);
        Ext.getCmp('lat').setValue(record.data.lat);
        Ext.getCmp('lon').setValue(record.data.lon);
        Ext.getCmp('permissions').setValue(record.data.permissions);
        Ext.getCmp('tagged').setValue(record.data.tagged);
        Ext.getCmp('image').setValue(record.data.image);
        Ext.getCmp('iconImg').setSrc(record.data.image);
        Ext.getCmp('placeAddBtn').setIconCls('refresh');

        GPSMarkerImage=record.data.image;
        this.updateMap();
    },

    onIconImgTap: function(image, e, eOpts) {
        var me=this;
        if (!me.choose){
            me.choose=Ext.create('MyApp.view.iconChooser');
            Ext.Viewport.add(me.choose);
        }
        me.choose.show();
    },

    onIconChooserItemTap: function(dataview, index, target, record, e, eOpts) {
        this.choose.hide();
        Ext.getCmp('iconImg').setSrc(record.data.value);
        Ext.getCmp('tagged').setValue(record.data.name);
        Ext.getCmp('image').setValue(record.data.value);
    },

    onPlaceAddBtnTap: function(button, e, eOpts) {
        var formValues = Ext.getCmp('placeDetailsForm').getValues();
        var model = Ext.ModelMgr.create(formValues,'MyApp.model.Places');      
        var errors = model.validate(),message = "";
        var errorMessage='';
        if(errors.isValid()){ 

            var locationsStore = Ext.getStore('MyLocations');
            var placeContainer=Ext.getCmp('placeContainer');
            var record=placeContainer.getRecord(record);

            if (record)
            {
                record.settitle=model.title;
                record.set('title', model.data.title);
                record.set('lon', model.data.lon);
                record.set('lat', model.data.lat);
                record.set('tagged', model.data.tagged);
                record.set('image', model.data.image);
                record.dirty = true;
                locationsStore.sync();
                locationsStore.load();

                GPSMarkerImage=model.data.image;
                this.updateMap();

                Ext.Msg.alert('Updated GPSName!');
            }
            else
            {
                locationsStore.add(model);
                locationsStore.sync();
                locationsStore.load();
                Ext.Msg.alert('Added GPSName!');
            }

        } else { 

            errors.each(function (err) {

                errorMessage +="<b>"+err.getField()+"</b> "+err.getMessage()+"<br/>";    

            }); // each()
            Ext.Msg.alert('Form is invalid!', errorMessage);
        } 

    },

    onPlaceDeleteBtnTap: function(button, e, eOpts) {
        var placeContainer=Ext.getCmp('placeContainer');
        var record=placeContainer.getRecord(record);
        var locationsStore=Ext.getStore('MyLocations');
        locationsStore.remove(record);
        locationsStore.sync();
        locationsStore.load();
        this.onPlaceClearBtnTap();
    },

    onPlaceClearBtnTap: function(button, e, eOpts) {
        Ext.getCmp('placeDetailsForm').reset();
        Ext.getCmp('iconImg').setSrc('images/icons/addIcon.png');
        Ext.getCmp('placeAddBtn').setIconCls('add');
    },

    onPlaceSendBtnTap: function(button, e, eOpts) {
        //**TODO Upload data and retrieve record id to server
        alert("Send -> http://localhost/gps/index.html#place/2");
    },

    onPlaceContainerActiveItemChange: function(container, value, oldValue, eOpts) {
        this.updateMap();
    },

    onExitChooseIconBtnTap: function(button, e, eOpts) {
        this.choose.hide();
    },

    updateMap: function() {
        var map = Ext.getCmp('googlemap_add').getMap();
        var myLatLng = new google.maps.LatLng(Ext.getCmp('lat').getValue(),Ext.getCmp('lon').getValue());
        var image;

        if (this.my_marker) {
            this.my_marker.setMap(null);
        }

        this.my_marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            icon: GPSMarkerImage
        });
        this.my_marker.setMap(map);

        //map.setZoom(17);
        map.setCenter(myLatLng);
    },

    launch: function() {
        var me=this;
        var geo = Ext.create('Ext.util.Geolocation', {
            autoUpdate: true,
            listeners: {
                locationupdate: function(geo) {
                    currentLat = geo.getLatitude();
                    currentLon = geo.getLongitude();
                    console.log(gpsEnabled);
                    if (gpsEnabled==1) {
                        Ext.getCmp('lat').setValue(currentLat);
                        Ext.getCmp('lon').setValue(currentLon);
                        me.updateMap();
                    }
                }
            }
        });
    },

    urlPlace: function(params) {
        // **TODO pull this data from server

        if (params=='1') {
            Ext.getCmp('title').setValue('Mock Title');
            Ext.getCmp('lat').setValue('51.33');
            Ext.getCmp('lon').setValue('-0.334676');
            Ext.getCmp('permissions').setValue('public');
            Ext.getCmp('tagged').setValue('abduction');
            Ext.getCmp('image').setValue('images/icons/abduction.png'); 
            Ext.getCmp('iconImg').setSrc('images/icons/abduction.png'); 

            GPSMarkerImage='images/icons/alien.png';   
        }

        if (params=='2') {
            Ext.getCmp('title').setValue('2nd Title');
            Ext.getCmp('lat').setValue('53.33');
            Ext.getCmp('lon').setValue('-0.314676');
            Ext.getCmp('permissions').setValue('public');
            Ext.getCmp('tagged').setValue('alien');
            Ext.getCmp('image').setValue('images/icons/alien.png'); 
            Ext.getCmp('iconImg').setSrc('images/icons/alien.png'); 

            GPSMarkerImage='images/icons/alien.png';   
        }
    }

});